import java.lang.Math;
import java.util.Timer;
import java.util.TimerTask;

public class multithreading {
    public static void main(String args[]) {
        thread1 t1 = new thread1();
        thread2 t2 = new thread2();
        thread3 t3 = new thread3();
        t1.start();
        t1.startProcess();
        try {
            t1.join();
        } catch (InterruptedException e) {
            System.out.println(e);
        }
        t2.start();
        t3.start();
    }
}

class thread1 extends Thread {
    int counter = 10;
    int max = 100;
    int min = 1;
    long initialDelay = 0L;
    long fixedDelay = 1000L;
    thread2 t2 = new thread2();
    thread3 t3 = new thread3();
    Timer timer = new Timer();

    public void startProcess() {
        TimerTask task=new TimerTask() {
            public void run(){
            if(counter>0){
                    int randomnumber=(int)(Math.random()*(max-min+1)+min);
                    System.out.println("the random number generated by thread1 is"+" "+randomnumber);
                    t2.run(randomnumber);
                    t3.run(randomnumber);
                    counter--;
            }
           else{
            System.out.println("oops the time limit is over");
            timer.cancel();
           } 
        }   
        };
        timer.scheduleAtFixedRate(task, initialDelay, fixedDelay);
    }
}

class thread2 extends Thread {
    public void run(int a) {
        System.out.println("the square of the given number generated by thread2 is" + " " + (a * a));
    }

}

class thread3 extends Thread {

    public void run(int a) {
        System.out.println("the cube of the given numbers generated by thread3 is" + " " + (a * a * a));
    }
}
